{"version":3,"sources":["../../../src/routes/entries.js"],"names":["router","express","Router","get","req","res","send","entries","entry","find","c","id","parseInt","params","status"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5BA,MAAIC,IAAJ,CAASC,eAAT;AACD,CAFD;;AAIAP,OAAOG,GAAP,CAAW,MAAX,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/B,MAAMG,QAAQD,gBAAQE,IAAR,CAAa;AAAA,WAAKC,EAAEC,EAAF,KAASC,SAASR,IAAIS,MAAJ,CAAWF,EAApB,EAAwB,EAAxB,CAAd;AAAA,GAAb,CAAd;AACA,MAAI,CAACH,KAAL,EAAYH,IAAIS,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB,oCAArB;AACZD,MAAIC,IAAJ,CAASE,KAAT;AACD,CAJD;;kBAMeR,M","file":"entries.js","sourcesContent":["import express from 'express';\r\nimport entries from '../models/entry';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get('/', (req, res) => {\r\n  res.send(entries);\r\n});\r\n\r\nrouter.get('/:id', (req, res) => {\r\n  const entry = entries.find(c => c.id === parseInt(req.params.id, 10));\r\n  if (!entry) res.status(404).send('Entry with specified ID not found.');\r\n  res.send(entry);\r\n});\r\n\r\nexport default router;\r\n"]}