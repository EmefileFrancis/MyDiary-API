{"version":3,"sources":["../../../src/routes/entries.js"],"names":["router","express","Router","get","req","res","send","entries","entry","find","c","id","parseInt","params","status","message","entriesByUser","filter","userId","undefined","length","post","result","body","error","details","newEntry","title","date","push","put","delete","index","indexOf","splice"],"mappings":"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","file":"entries.js","sourcesContent":["import express from 'express';\r\nimport { entries, validateEntry } from '../models/entry';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get('/', (req, res) => {\r\n  res.send(entries);\r\n});\r\n\r\nrouter.get('/:id', (req, res) => {\r\n  const entry = entries.find(c => c.id === parseInt(req.params.id, 10));\r\n  if (!entry) res.status(404).send({ message: 'Entry with specified ID not found.' });\r\n  res.send(entry);\r\n});\r\n\r\nrouter.get('/userId/:userId', (req, res) => {\r\n  const entriesByUser = entries.filter(c => c.userId === parseInt(req.params.userId, 10));\r\n  if (entriesByUser === undefined || entriesByUser.length === 0) res.status(404).send({ message: 'Entry with specified ID not found.' });\r\n  res.send(entriesByUser);\r\n});\r\n\r\nrouter.post('/', (req, res) => {\r\n  const result = validateEntry(req.body);\r\n  if (result.error) res.status(400).send(result.error.details[0].message);\r\n\r\n  const newEntry = {\r\n    id: req.body.id,\r\n    title: req.body.title,\r\n    body: req.body.body,\r\n    date: req.body.date,\r\n  };\r\n\r\n  entries.push(newEntry);\r\n  res.send(newEntry);\r\n});\r\n\r\nrouter.put('/:id', (req, res) => {\r\n  const entry = entries.find(c => c.id === parseInt(req.params.id, 10));\r\n  if (!entry) res.status(404).send({ message: 'Entry with specified ID not found.' });\r\n\r\n  const result = validateEntry(req.body);\r\n  if (result.error) res.status(400).send(result.error.details[0].message);\r\n\r\n  entry.userId = req.body.userId;\r\n  entry.title = req.body.title;\r\n  entry.body = req.body.body;\r\n  entry.date = req.body.date;\r\n\r\n  res.send(entries);\r\n});\r\n\r\nrouter.delete('/:id', (req, res) => {\r\n  const entry = entries.find(c => c.id === parseInt(req.params.id, 10));\r\n  if (!entry) res.status(404).send({ message: 'Entry with specified ID not found.' });\r\n\r\n  const index = entries.indexOf(entry);\r\n  entries.splice(index, 1);\r\n  res.send(entries);\r\n});\r\n\r\nexport default router;\r\n"]}